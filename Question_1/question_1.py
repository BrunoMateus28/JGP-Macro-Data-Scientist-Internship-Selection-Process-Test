# -*- coding: utf-8 -*-
"""Question 1

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1yoK5laQNWDf807lNUEGDAYXTcCxwLGz8
"""

import requests
import json
import csv
from datetime import datetime

# Define headers and data payload for the API request
headers = {'Content-type': 'application/json'}
start_year = 2020
end_year = 2024
end_month = datetime.now().month

data = json.dumps({
    "seriesid": ['CUSR0000SA0', 'CUSR0000SA0L1E', 'CUSR0000SETB01'],  # CPI series IDs
    "startyear": start_year,
    "endyear": end_year,
    "startmonth": 1,  # Start from January
    "endmonth": end_month  # End at the current month
})

# Send the API request
response = requests.post('https://api.bls.gov/publicAPI/v2/timeseries/data/', data=data, headers=headers)
json_data = json.loads(response.text)

# Create a dictionary to store the processed data
data_dict = {}

# Process the JSON data
for series in json_data['Results']['series']:
    series_id = series['seriesID']
    for item in series['data']:
        year = int(item['year'])
        month = int(item['period'][1:])
        value = item['value']
        if 1 <= month <= 12:  # Include only monthly data
            date = datetime(year, month, 1).strftime('%m/%d/%Y')
            if date not in data_dict:
                data_dict[date] = {'date': date}
            data_dict[date][series_id] = value

# Define the header for the CSV
header = ['date', 'series 1', 'series 2', 'series 3']

# Map series IDs to header columns
series_mapping = {
    'CUSR0000SA0': 'series 1',
    'CUSR0000SA0L1E': 'series 2',
    'CUSR0000SETB01': 'series 3'
}

# Write the data to a CSV file
with open('cpi_data.csv', mode='w', newline='') as file:
    writer = csv.DictWriter(file, fieldnames=header)
    # Write the header
    writer.writeheader()
    # Write the data
    for key in sorted(data_dict.keys(), key=lambda x: datetime.strptime(x, '%m/%d/%Y')):
        row = {'date': data_dict[key]['date']}
        for series_id in series_mapping.keys():
            row[series_mapping[series_id]] = data_dict[key].get(series_id, '')
        writer.writerow(row)

print("Data has been saved to cpi_data.csv")